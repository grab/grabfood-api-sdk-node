// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
 * GrabFood
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { UpdateAdvancedPricing } from './updateAdvancedPricing';
import { UpdateMenuItem } from './updateMenuItem';
import { UpdateMenuModifier } from './updateMenuModifier';
import { UpdatePurchasability } from './updatePurchasability';

export class UpdateMenuRequest {
    /**
    * The merchant\'s ID that is in GrabFood\'s database.
    */
    'merchantID': string;
    /**
    * The record type that you want to update.
    */
    'field': UpdateMenuRequest.FieldEnum;
    /**
    * The record\'s ID on the partner system. For example, the modifier id in case type is MODIFIER.
    */
    'id': string;
    /**
    * The record\'s price in minor unit format.
    */
    'price'?: number;
    /**
    * The record\'s availableStatus.
    */
    'availableStatus'?: UpdateMenuRequest.AvailableStatusEnum;
    /**
    * Available stocks under inventory for this item. Auto reduce when there is order placed for this item.  Note: It is necessary to set `maxStock` to 0 if the `availableStatus` of the item is \"UNAVAILABLE\". Item will be set to \"AVAILABLE\" if `maxStock` > 0. 
    */
    'maxStock'?: number;
    /**
    * Price configuration (in minor unit) for different service, order type and channel combination. If a service type does not have a specified price, it will utilize the default price of the item. 
    */
    'advancedPricings'?: Array<UpdateAdvancedPricing>;
    /**
    * Purchasability is set to true by default for all service type, unless it is explicitly set to false. Modifier will reuse it’s item’s purchasability. 
    */
    'purchasabilities'?: Array<UpdatePurchasability>;
    /**
    * **Only required when updating modifiers.** The record\'s name. Used as identifier to locate the correct record.
    */
    'name': string;
    /**
    * Allows the modifier\'s price to be explicitly set as zero. Possible values are as follows:   * `isFree` && `price == 0` sets the modifier\'s price to zero.   * `isFree` && `price > 0` returns an error message that \"price cannot be set to > 0, if modifier is free”.   * `!isFree` && `price > 0` sets the modifier\'s price to the defined price.   * `!isFree` && `price == 0` does not update the modifier\'s price and reuses the existing price. 
    */
    'isFree'?: boolean;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "merchantID",
            "baseName": "merchantID",
            "type": "string"
        },
        {
            "name": "field",
            "baseName": "field",
            "type": "UpdateMenuRequest.FieldEnum"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number"
        },
        {
            "name": "availableStatus",
            "baseName": "availableStatus",
            "type": "UpdateMenuRequest.AvailableStatusEnum"
        },
        {
            "name": "maxStock",
            "baseName": "maxStock",
            "type": "number"
        },
        {
            "name": "advancedPricings",
            "baseName": "advancedPricings",
            "type": "Array<UpdateAdvancedPricing>"
        },
        {
            "name": "purchasabilities",
            "baseName": "purchasabilities",
            "type": "Array<UpdatePurchasability>"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "isFree",
            "baseName": "isFree",
            "type": "boolean"
        }    ];

    static getAttributeTypeMap() {
        return UpdateMenuRequest.attributeTypeMap;
    }
}

export namespace UpdateMenuRequest {
    export enum FieldEnum {
        Modifier = <any> 'MODIFIER',
        UnknownDefaultOpenApi = <any> '11184809'
    }
    export enum AvailableStatusEnum {
        Available = <any> 'AVAILABLE',
        Unavailable = <any> 'UNAVAILABLE',
        Unavailabletoday = <any> 'UNAVAILABLETODAY',
        UnknownDefaultOpenApi = <any> '11184809'
    }
}
