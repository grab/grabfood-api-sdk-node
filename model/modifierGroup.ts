// Copyright 2024 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

/*
 * GrabFood
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.1.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { MenuModifier } from './menuModifier';

export class ModifierGroup {
    /**
    * The modifier group\'s ID that is on the partner system. This ID should be unique.
    */
    'id': string;
    /**
    * The name of the modifier group.
    */
    'name': string;
    /**
    * Translation of the modifier group name. Only support up to 1 translated language. Refer [Menu Translation](#section/Menu-Translation).
    */
    'nameTranslation'?: { [key: string]: string; };
    /**
    * The status for the modifier group.   > The item may be marked as `\"UNAVAILABLE\"` if no available modifier to be selected within the required modifier group where `\"selectionRangeMin\": 1`. 
    */
    'availableStatus': ModifierGroup.AvailableStatusEnum;
    /**
    * The minimum quantity of the modifiers to be selected. Refer to FAQs for more details about [selection range](#section/Menu/What-does-the-selection-range-do).
    */
    'selectionRangeMin'?: number;
    /**
    * The maximum quantity of the modifiers to be selected. Refer to FAQs for more details about [selection range](#section/Menu/What-does-the-selection-range-do).
    */
    'selectionRangeMax': number;
    /**
    * The sort or display order of the modifier group within the menu.
    */
    'sequence'?: number;
    /**
    * An array of modifier JSON objects. Max 100 per modifierGroup. Refer to [Modifiers](#modifiers) for more information.
    */
    'modifiers'?: Array<MenuModifier>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "nameTranslation",
            "baseName": "nameTranslation",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "availableStatus",
            "baseName": "availableStatus",
            "type": "ModifierGroup.AvailableStatusEnum"
        },
        {
            "name": "selectionRangeMin",
            "baseName": "selectionRangeMin",
            "type": "number"
        },
        {
            "name": "selectionRangeMax",
            "baseName": "selectionRangeMax",
            "type": "number"
        },
        {
            "name": "sequence",
            "baseName": "sequence",
            "type": "number"
        },
        {
            "name": "modifiers",
            "baseName": "modifiers",
            "type": "Array<MenuModifier>"
        }    ];

    static getAttributeTypeMap() {
        return ModifierGroup.attributeTypeMap;
    }
}

export namespace ModifierGroup {
    export enum AvailableStatusEnum {
        Available = <any> 'AVAILABLE',
        Unavailable = <any> 'UNAVAILABLE',
        Unavailabletoday = <any> 'UNAVAILABLETODAY',
        Hide = <any> 'HIDE',
        UnknownDefaultOpenApi = <any> '11184809'
    }
}
